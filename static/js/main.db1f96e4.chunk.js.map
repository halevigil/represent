{"version":3,"sources":["components/MenuAppBar.jsx","components/RepCard.jsx","components/SenateList.jsx","components/HouseList.jsx","components/Profile.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","position","width","zIndex","bar","background","concat","palette","primary","main","secondary","menuButton","marginRight","spacing","title","MenuAppBar","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","auth","setAuth","_React$useState3","_React$useState4","anchorEl","setAnchorEl","open","Boolean","handleClose","react_default","a","createElement","className","AppBar","Toolbar","IconButton","edge","color","aria-label","Menu_default","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","label","Typography","variant","aria-controls","aria-haspopup","onClick","currentTarget","AccountCircle_default","Menu_Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","card","minWidth","justifyContent","alignContent","fontSize","pos","marginBottom","links","alignItems","textDecoration","avatar","alignSelf","party","float","RepCard","props","console","log","member","senate","Grid","item","xs","Card","CardContent","gutterBottom","state","react_router_dom","to","container","justify","Avatar","component","first_name","last_name","CardActions","Button","rel","href","twitter_account","size","facebook_account","youtube_account","url","padding","top","paper","textAlign","text","SenateList","_useState","_useState2","setSenate","options","headers","X-API-Key","mode","useEffect","fetch","then","json","senateJson","results","members","catch","error","map","curr","i","components_RepCard","key","paddingTop","HouseList","PaperSheet","Paper","routes","react_router","path","exact","Profile","createMuiTheme","default","App","MuiThemeProvider","CssBaseline","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db1f96e4.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport Switch from '@material-ui/core/Switch'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    position: 'fixed',\n    width: '100%',\n    zIndex: 1100\n  },\n  bar: {\n    background: `linear-gradient(45deg, ${theme.palette.primary.main} 30%, ${theme.palette.secondary.main} 90%)`\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}))\n\nconst MenuAppBar = () => {\n  const classes = useStyles()\n  const [auth, setAuth] = React.useState(true)\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const open = Boolean(anchorEl)\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked)\n  }\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.bar} position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <FormGroup>\n            <FormControlLabel\n              control={<Switch checked={auth} onChange={handleChange} aria-label=\"LoginSwitch\" />}\n              label={auth ? 'Logout' : 'Login'}\n            />\n          </FormGroup>\n          <Typography variant=\"h6\" className={classes.title}>\n            Represent.\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"Account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default MenuAppBar\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    minWidth: 275,\n    justifyContent: 'center',\n    alignContent: 'center',\n    flexGrow: 1\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  links: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    textDecoration: 'none',\n    color: theme.palette.primary.main\n  },\n  avatar: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    marginBottom: 12\n  },\n  party: {\n    fontSize: 14,\n    float: 'left'\n  }\n}))\n\nconst RepCard = props => {\n  console.log('RepCard Mount: ', { props })\n  const classes = useStyles()\n  const member = props.member\n  if (props.senate) console.log(props.senate.senate[0])\n\n  return (\n    <Grid item xs>\n      <Card className={classes.card}>\n\n        <CardContent>\n          <Typography className={classes.party} color=\"textSecondary\" gutterBottom>\n            {member.state} {member.party}\n          </Typography>\n          <Link className={classes.links} to=\"/profile\">\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Avatar className={classes.avatar}>\n                <AccountCircle />\n              </Avatar>\n            </Grid>\n            <Typography variant=\"h5\" component=\"h2\">\n              {member.first_name} {member.last_name}\n            </Typography>\n          </Link>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {member.title}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            <i>Summary...</i>\n          </Typography>\n        </CardContent>\n\n        <CardActions className={classes.links}>\n          <Button rel=\"noopener noreferrer\" target=\"_blank\" href={`https://twitter.com/${member.twitter_account}`} size=\"small\">Twitter</Button>\n          <Button rel=\"noopener noreferrer\" target=\"_blank\" href={`https://facebook.com/${member.facebook_account}`} size=\"small\">Facebook</Button>\n          <Button rel=\"noopener noreferrer\" target=\"_blank\" href={`https://youtube.com/${member.youtube_account}`} size=\"small\">YouTube</Button>\n          <Button rel=\"noopener noreferrer\" target=\"_blank\" href={member.url} size=\"small\">Website</Button>\n        </CardActions>\n\n      </Card>\n    </Grid>\n  )\n}\n\nexport default RepCard\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\nimport RepCard from './RepCard'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: 24,\n    position: 'relative',\n    top: 60\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}))\n\nconst SenateList = props => {\n  const classes = useStyles()\n  const [senate, setSenate] = useState()\n  const options = { headers: { 'X-API-Key': 'JSp1AQhdSIuQQssE07bf5bsDT7HTpPDVQLAda1nx' }, mode: 'cors' }\n\n  useEffect(() => {\n    console.log(senate)\n    if (!senate) {\n      fetch('https://api.propublica.org/congress/v1/116/senate/members.json', options)\n        .then(senate => senate.json())\n        .then(senateJson => setSenate({ senate: senateJson.results[0].members }))\n        .catch(error => console.error(error))\n    }\n  })\n\n  const renderSenate = members => members.senate.map((curr, i) => <RepCard key={i} member={curr} />)\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" gutterBottom>\n        Senate\n      </Typography>\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n        {senate && renderSenate(senate)}\n      </Grid>\n    </div>\n\n  )\n}\n\nexport default SenateList\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n\nimport RepCard from './RepCard'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: 24,\n    paddingTop: 60\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}))\n\nconst HouseList = props => {\n  const classes = useStyles()\n  const [senate, setSenate] = useState()\n  const options = { headers: { 'X-API-Key': 'JSp1AQhdSIuQQssE07bf5bsDT7HTpPDVQLAda1nx' }, mode: 'cors' }\n\n  useEffect(() => {\n    console.log(senate)\n    if (!senate) {\n      fetch('https://api.propublica.org/congress/v1/116/house/members.json', options)\n        .then(senate => senate.json())\n        .then(senateJson => setSenate({ senate: senateJson.results[0].members }))\n        .catch(error => console.error(error))\n    }\n  })\n\n  const renderSenate = members => members.senate.map((curr, i) => <RepCard key={i} member={curr} />)\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\" gutterBottom>\n        House\n      </Typography>\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n        {senate && renderSenate(senate)}\n      </Grid>\n    </div>\n\n  )\n}\n\nexport default HouseList\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}))\n\nexport default function PaperSheet () {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" component=\"h3\">\n          This is a sheet of paper.\n        </Typography>\n        <Typography component=\"p\">\n          Paper can be used to build surface or other elements for your application.\n        </Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, HashRouter } from 'react-router-dom'\nimport MenuAppBar from './components/MenuAppBar'\nimport SenateList from './components/SenateList'\nimport HouseList from './components/HouseList'\nimport Profile from './components/Profile'\n\nexport default props => (\n  <HashRouter>\n    <Route path='/' component={MenuAppBar} />\n    <Route exact path='/' component={SenateList} />\n    <Route exact path='/' component={HouseList} />\n    <Route path='/profile' component={Profile} />\n  </HashRouter>\n)\n","import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nimport Routes from './routes'\nimport './App.css'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#0d47a1'\n    },\n    secondary: {\n      main: '#d50000'\n    },\n    background: {\n      default: '#F6F8FA'\n    }\n  }\n})\n\nconst App = () => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <CssBaseline />\n        <Routes />\n      </div>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}